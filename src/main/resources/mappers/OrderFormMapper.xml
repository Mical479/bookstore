<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bookstore.mapper.OrderFormMapper">
    <resultMap id="order_form" type="com.bookstore.pojo.OrderForm">
        <id column="order_id" property="orderId"/>
        <result column="all_cost" property="allCost"/>
        <result column="all_number" property="allNumber"/>
        <result column="create_time" property="createTime"/>
        <result column="pay_time" property="payTime"/>
        <result column="alipayNo" property="alipayNo"/>
        <result column="order_status" property="orderStatus"/>
        <!-- 一对一：association使用select属性引入另外一条SQL语句 -->
        <association property="bookUser" column="user_id" javaType="com.bookstore.pojo.BookUser">
            <id property="userId" column="user_id"/>
            <result column="user_name" property="userName"/>
            <result column="user_password" property="userPassword"/>
            <result column="user_email" property="userEmail"/>
            <result column="picture" property="picture"/>
            <result column="creat_time" property="creatTime"/>
        </association>
        <association property="address" column="address_id" javaType="com.bookstore.pojo.Address">
            <id property="addressId" column="address_id"/>
            <id property="userId" column="user_id"/>
            <id property="receiverName" column="receiver_name"/>
            <id property="receiverPhone" column="receiver_phone"/>
            <id property="receiverAddress" column="receiver_address"/>
            <id property="isDefault" column="is_default"/>
        </association>
    </resultMap>

    <!-- 嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集 -->
    <!--根据orderId查询订单详情-->
    <select id="selectByOrderId" parameterType="Integer"
            resultMap="order_form">
	   SELECT p.*,b.*,a.*
	    from order_form p,book_user b, address a
	    where p.user_id=b.user_id
	    and p.order_id=#{orderId}
	    and p.address_id = a.address_id
	    order by p.create_time
	</select>

    <!--根据使用者user_id查询订单列表详情-->
    <select id="selectByUserId" parameterType="Integer"
            resultMap="order_form">
         SELECT p.*,b.*,a.*
	    from order_form p,book_user b, address a
	    where p.user_id=b.user_id
	    and p.user_id=#{userId}
	    and p.address_id = a.address_id
	    and p.order_status = 1
    </select>

    <!--根据使用者user_id查询未完成订单列表详情-->
    <select id="selectByUserIdFailed" parameterType="Integer"
            resultMap="order_form">
         SELECT p.*,b.*,a.*
	    from order_form p,book_user b, address a
	    where p.user_id=b.user_id
	    and p.user_id=#{userId}
	    and p.address_id = a.address_id
	    and p.order_status = 0
    </select>

    <insert id="insertForm" parameterType="com.bookstore.pojo.OrderForm">
        insert into order_form(order_id,user_id,all_cost,all_number,create_time,pay_time,alipayNo,order_status,address_id)
        values (#{orderId},#{bookUser.userId},#{allCost},#{allNumber},#{createTime},#{payTime},#{alipayNo},#{orderStatus},#{address.addressId})
    </insert>

    <update id="updateForm" parameterType="com.bookstore.pojo.OrderForm">
        update order_form set
        <trim suffixOverrides=",">
            <if test="payTime != null">
                pay_time = #{payTime},
            </if>
            <if test="alipayNo != null and alipayNo != ''">
                alipayNo = #{alipayNo},
            </if>
            <if test="orderStatus != null and orderStatus != ''">
                order_status = #{orderStatus},
            </if>
        </trim>
        where order_id = #{orderId}
    </update>
</mapper>